name: CI/CD

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3072m -XX:MaxMetaspaceSize=1g -Xms512m -XX:+HeapDumpOnOutOfMemoryError"
  ANDROID_PUBLISHER_CREDENTIALS: ${{ secrets.ANDROID_PUBLISHER_CREDENTIALS }}
  SIGNING_KEYSTORE_PLAY: ${{ secrets.SIGNING_KEYSTORE }}
  SIGNING_PROPERTIES_PLAY: ${{ secrets.SIGNING_PROPERTIES }}
  SIGNING_KEYSTORE_GITHUB: ${{ secrets.SIGNING_KEYSTORE_GITHUB }}
  SIGNING_PROPERTIES_GITHUB: ${{ secrets.SIGNING_PROPERTIES_GITHUB }}
  GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}

jobs:
  test:
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@017a9effdb900e5b5b2fddfb590a105619dca3c3 # v4

      - name: Set up JDK
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Signing
        run: ./ci_signing_setup.sh

      - name: Test
        run: ./gradlew voiceUnitTest  lintKotlin :app:lintPlayDebug :app:assemblePlayDebug :scripts:build

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: "Artifacts"
          path: |
            artifacts/
            app/build/reports/*.html

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@3585e9575db828022551b4231f165eb59a0e74e3 # v5
        if: always()
        with:
          report_paths: '**/test-results/**/TEST-*.xml'

  instrumentation_test:
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@017a9effdb900e5b5b2fddfb590a105619dca3c3 # v4

      - name: Set up JDK
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Signing
        run: ./ci_signing_setup.sh

      - name: Accept Android licenses
        run: yes | "$ANDROID_HOME"/cmdline-tools/latest/bin/sdkmanager --licenses || true

      - name: Setup GMD
        run: ./gradlew voiceDeviceSetup
          -Pandroid.testoptions.manageddevices.emulator.gpu="swiftshader_indirect"

      - name: Test
        run: ./gradlew voiceDeviceGithubDebugAndroidTest
          -Pandroid.testoptions.manageddevices.emulator.gpu="swiftshader_indirect"

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: "Artifacts"
          path: |
            artifacts/
            app/build/reports/*.html

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@3585e9575db828022551b4231f165eb59a0e74e3 # v5
        if: always()
        with:
          report_paths: '**/test-results/**/TEST-*.xml'

  build_release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    timeout-minutes: 60
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Set up JDK
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@017a9effdb900e5b5b2fddfb590a105619dca3c3 # v4

      - name: Setup Signing
        run: ./ci_signing_setup.sh

      - name: Create Output Directory
        run: mkdir -p outputs

      - name: Build Google Play AAB
        run: ./gradlew :app:bundlePlayRelease

      - name: Build Github Proprietary APK
        run: ./gradlew :app:assembleGithubRelease

      - name: Copy Github Proprietary APK
        run: cp app/build/outputs/apk/github/release/app-github-release.apk outputs/proprietary.apk

      - name: Build Github Libre APK
        run: ./gradlew :app:assembleGithubRelease  -Pvoice.includeProprietaryLibraries=false

      - name: Copy Github Libre APK
        run: cp app/build/outputs/apk/github/release/app-github-release.apk outputs/libre.apk

      - name: Upload AAB artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: google-play-aab
          path: app/build/outputs/bundle/playRelease/app-play-release.aab
          retention-days: 30

      - name: Github Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2
        with:
          draft: true
          files: |
            outputs/*.apk

  publish_google_play:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: build_release
    runs-on: ubuntu-latest
    environment: "google-play"
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Set up JDK
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@017a9effdb900e5b5b2fddfb590a105619dca3c3 # v4

      - name: Setup Signing
        run: ./ci_signing_setup.sh

      - name: Download AAB artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: google-play-aab
          path: app/build/outputs/bundle/playRelease/

      - name: Publish to Google Play
        run: ./gradlew publishBundle --artifact-dir app/build/outputs/bundle/playRelease/
