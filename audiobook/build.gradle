/*
 * This file is part of Material Audiobook Player.
 *
 * Material Audiobook Player is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or any later version.
 *
 * Material Audiobook Player is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Material Audiobook Player. If not, see <http://www.gnu.org/licenses/>.
 * /licenses/>.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 103
        versionName 'snapshot'

        testInstrumentationRunner "de.ph1b.audiobook.testing.MockAppRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.pro'
            resValue "string", "app_name", "Material Player"
        }
        debug {
            minifyEnabled false
            shrinkResources false
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "[DBG] Material Player"
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def original = output.outputFile
            def originalName = original.name.replaceFirst(~/\.[^\.]+$/, '')
            def newDestination = "apks/${variant.versionCode}-${variant.versionName}-${originalName}.apk"
            output.outputFile = file(newDestination)
        }
    }
}

dependencies {
    // support library
    def supportVersion = "23.1.1"
    compile "com.android.support:appcompat-v7:$supportVersion"
    compile "com.android.support:recyclerview-v7:$supportVersion"

    // http library
    def okHttpVersion = "3.0.1"
    compile "com.squareup.okhttp3:okhttp:$okHttpVersion"
    compile "com.squareup.okhttp3:okhttp-urlconnection:$okHttpVersion"

    // image loading
    compile "com.squareup.picasso:picasso:2.5.2"

    // material styled dialogs
    compile("com.afollestad.material-dialogs:core:0.8.5.3@aar") {
        transitive = true
    }

    // fab
    compile "com.getbase:floatingactionbutton:1.10.1"

    // crash reporting
    compile "ch.acra:acra:4.7.0"

    // dependency injection
    def daggerVersion = "2.0.2"
    compile "com.google.dagger:dagger:$daggerVersion"
    androidTestCompile "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    provided "javax.annotation:jsr250-api:1.0"

    // logging
    compile "com.jakewharton.timber:timber:4.1.0"

    //testing
    testCompile "junit:junit:4.12"
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.1') {
        exclude module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test:runner:0.4.1') {
        exclude module: 'support-annotations'
    }
    androidTestCompile "com.jayway.android.robotium:robotium-solo:5.5.3"

    // rx extensions
    compile "io.reactivex:rxandroid:1.1.0"
    compile "io.reactivex:rxjava:1.1.0"
    compile 'com.jakewharton.rxbinding:rxbinding-kotlin:0.3.0'

    // detecting memory leaks
    def leakCanaryVersion = "1.4-beta1"
    debugCompile "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    // rest
    def retroFitVersion = "2.0.0-beta3"
    compile "com.squareup.retrofit2:retrofit:$retroFitVersion"
    compile "com.squareup.retrofit2:converter-gson:$retroFitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava:$retroFitVersion"

    // kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    // player
    compile 'com.github.AntennaPod:AntennaPod-AudioPlayer:v1.0.10'
}
